#include <iostream>
#include <windows.h>
#include <GL/glut.h>
#include <stdio.h>
#include <conio.h>
#include <bits/stdc++.h>
using namespace std;

float x1, x2, y1, y2;

void bresenham() {
    float x, y, p0 = 0, dx = abs(x2 - x1), dy = abs(y2 - y1);
    int i = 0;
    m = dy/dx ;
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 1.0, 1.0);
    glPointSize(2.0);
    glBegin(GL_POINTS);
    glVertex2f(x1 / 100, y1 / 100);
    
    if (m<1){

        for (i = 1; i <= dx; i++) {
        p0 = (2 * dy) - dx;
        if (p0 > 0) {
            x = x1 + 1;
            y = y1 + 1;
            glVertex2f(x / 100, y / 100);
        }
        if (p0 < 0) {
            x = x1 + 1;
            glVertex2f(x / 100, y / 100);
        }
    }
    else{

        for (i = 1; i <= dx; i++) {
        p0 = (2 * dx) - dy;
        if (p0 > 0) {
            x = x1 + 1;
            y = y1 + 1;
            glVertex2f(x / 100, y / 100);
        }
        if (p0 < 0) {
            y = y1 + 1;
            glVertex2f(x / 100, y / 100);
        }
    }




    }





    }





    glEnd();
    glFlush();
}

int main(int argc, char *argv[]) {
    glutInit(&argc, argv);
    glutInitWindowSize(1366, 768);
    glutInitWindowSize(10, 10);
    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE | GLUT_DEPTH);
    glutCreateWindow("Lab_1_Drawing_by_POINT");
    cout << "Enter x1: ";
    cin >> x1;
    cout << "Enter y1: ";
    cin >> y1;
    cout << "Enter x2: ";
    cin >> x2;
    cout << "Enter y2: ";
    cin >> y2;
    glutDisplayFunc(bresenham);
    glutMainLoop();
    return 0;
}
